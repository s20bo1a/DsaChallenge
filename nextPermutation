import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{   
	// public static void reverse(ArrayList<Integer>permutation){
    //    int m=permutation.size();
	//      int start=0,end=m-1;
	// 	 while(start<=end){
	// 		 int temp=permutation.get(start);
	// 		 permutation.get(start)=permutation.get(end);
	// 		 permutation.get(end)=temp;

	// 		 start++;
	// 		 end--;
	// 	 }
    //    for(int i=0;i<m;i++){
	// 	   System.out.println(permutaion.get(i));
	//    }
       
	// }
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
		// ArrayList<Integer>res=new ArrayList<>();
         int n=permutation.size();
          int idx=-1;
		 for(int i=n-2;i>=0;i--){
			 if(permutation.get(i)<permutation.get(i+1)){
                    idx=i;
					break;
			 }
		 }
          if(idx==-1){
             Collections.reverse(permutation);
			  return permutation;
		  }
         
		 for(int i=n-1;i>idx;i--){
			 if(permutation.get(i)>permutation.get(idx)){
				 int temp=permutation.get(i);
				 permutation.set(i,permutation.get(idx));
				 permutation.set(idx,temp);
				 break;
			 }
		 }
		 List<Integer> sublst=permutation.subList(idx+1, n);
           Collections.reverse(sublst);

      return permutation;
	}
}
